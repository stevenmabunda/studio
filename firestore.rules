
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // USERS
    match /users/{userId} {
      allow read: if request.auth != null;
      // Allow users to create and update their own profile document.
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // POSTS
    match /posts/{postId} {
      // Allow any authenticated user to read any post.
      allow read: if request.auth != null;

      // Allow a user to create a post if they are the author.
      allow create: if request.auth != null 
                    && request.resource.data.authorId == request.auth.uid;
                    
      // Allow any authenticated user to update a post. This is necessary so that 
      // anyone can update comment/like counts. For a production app, you might
      // use more granular rules or a Cloud Function for counters.
      allow update: if request.auth != null;
      
      // Allow a user to delete a post only if they are the author.
      allow delete: if request.auth != null 
                    && resource.data.authorId == request.auth.uid;

      // COMMENTS subcollection
      match /comments/{commentId} {
        // Allow any authenticated user to read comments.
        allow read: if request.auth != null;
        
        // Allow a user to create a comment if they are the author.
        allow create: if request.auth != null 
                      && request.resource.data.authorId == request.auth.uid;
      }
    }
    
    // STORIES
    match /stories/{storyId} {
      // Allow any authenticated user to read stories.
      allow read: if request.auth != null;
      
      // Allow a user to create a story for themselves.
      allow create: if request.auth != null 
                    && request.resource.data.userId == request.auth.uid;
    }
  }
}
