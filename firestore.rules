
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default-deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Logged-in users can read all profiles, but only write their own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Rules for posts
    match /posts/{postId} {
      // Logged-in users can read all posts
      allow read: if request.auth != null;
      
      // Logged-in users can create posts, as long as they are the author
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      
      // Allow updates for actions like voting or incrementing comment counts.
      // NOTE: This rule is permissive for updates to allow app functionality.
      // A production app would have more granular checks.
      allow update: if request.auth != null;

      // Only the author can delete their post
      allow delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }

    // Rules for the comments subcollection
    match /posts/{postId}/comments/{commentId} {
      // Anyone logged in can read or create comments
      allow read, create: if request.auth != null;
    }
    
    // Rules for stories
    match /stories/{storyId} {
        // Anyone logged in can read stories
        allow read: if request.auth != null;
        // A user can only create their own story
        allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
