
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthor(userId) {
      return request.auth.uid == userId;
    }

    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isAuthor(userId);
    }

    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if isAuthor(request.resource.data.authorId);
      allow delete: if isAuthor(resource.data.authorId);

      // Update logic is split into two cases:
      // 1. The author edits the post content.
      // 2. Any user interacts with the post (like, repost, comment, vote).
      
      // Case 1: Author edits content.
      // We must verify they don't change immutable fields like authorId or createdAt.
      allow update: if isAuthor(resource.data.authorId) &&
                     request.resource.data.content != resource.data.content &&
                     request.resource.data.authorId == resource.data.authorId &&
                     request.resource.data.createdAt == resource.data.createdAt;
                     
      // Case 2: Any authenticated user updates interaction counts.
      // We must verify they ONLY change interaction counts.
      allow update: if request.auth != null &&
                     request.resource.data.content == resource.data.content &&
                     request.resource.data.authorId == resource.data.authorId &&
                     request.resource.data.createdAt == resource.data.createdAt &&
                     (
                       request.resource.data.likes != resource.data.likes ||
                       request.resource.data.reposts != resource.data.reposts ||
                       request.resource.data.comments != resource.data.comments ||
                       request.resource.data.poll != resource.data.poll
                     );
    }

    // Authenticated users can read/create comments, but only delete their own.
    match /posts/{postId}/comments/{commentId} {
        allow read, create: if request.auth != null;
        allow update, delete: if isAuthor(resource.data.authorId);
    }

    // Authenticated users can create topics. Anyone authenticated can read them.
    match /topics/{topicId} {
      allow read, create: if request.auth != null;
    }

    // Stories can be read by any authenticated user.
    // Users can only create and delete their own stories.
    match /stories/{storyId} {
      allow read: if request.auth != null;
      allow create: if isAuthor(request.resource.data.userId);
      allow delete: if isAuthor(resource.data.userId);
    }
  }
}
