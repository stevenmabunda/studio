rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /posts/{postId} {
      allow read;
      
      // Allow post creation for any authenticated user.
      allow create: if request.auth != null;
      
      // Allow the author of a post to delete it.
      allow delete: if request.auth.uid == resource.data.authorId;
      
      // Allow the author to edit only the content of their post.
      allow update: if request.auth.uid == resource.data.authorId
                      && request.resource.data.content != resource.data.content
                      && request.resource.data.keys().hasOnly(['content']);
                      
      // Allow any authenticated user to update interaction fields (likes, comments, etc.).
      allow update: if request.auth != null
                      && request.resource.data.diff(resource.data).affectedKeys()
                         .hasAny(['likes', 'comments', 'reposts', 'poll']);

      // Allow anyone to read/write comments. This could be tightened.
      match /comments/{commentId} {
        allow read, write: if request.auth != null;
      }
    }

    match /users/{userId} {
      allow read;
      // Allow a user to update their own profile information.
      allow update: if request.auth.uid == userId;

      match /followers/{followerId} {
        allow read;
        // A user can add/remove themselves from another user's followers list.
        allow write: if request.auth.uid == followerId;
      }

      match /following/{followingId} {
        allow read;
        // A user can only manage their own 'following' list.
        allow write: if request.auth.uid == userId;
      }
      
      match /bookmarks/{bookmarkId} {
        // A user can only manage their own bookmarks.
        allow read, write: if request.auth.uid == userId;
      }
      
      match /notifications/{notificationId} {
        // A user can only read and write to their own notifications.
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /topics/{topicId} {
      // Allow anyone to read topics, and any authenticated user to create them.
      allow read;
      allow create: if request.auth != null;
    }
  }
}
