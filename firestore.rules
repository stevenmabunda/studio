rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }
    
    match /users/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
    }
    
    match /stories/{storyId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    match /posts/{postId} {
      allow get, list: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.authorId == request.auth.uid;

      // Allow author to update content.
      // Allow any signed-in user to update interaction fields (likes, reposts, comments, poll).
      allow update: if isSignedIn() && (
          (resource.data.authorId == request.auth.uid && request.resource.data.content != resource.data.content) ||
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'reposts', 'comments', 'poll'])
      );

      match /comments/{commentId} {
        allow get, list: if isSignedIn();
        // A user can only create a comment as themselves.
        allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      }
    }
  }
}
