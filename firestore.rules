rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isOwner(userId);
    }

    match /stories/{storyId} {
      allow read, list: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow delete, update: if isSignedIn() && isOwner(resource.data.userId);
    }

    match /posts/{postId} {
      allow read, list, create: if isSignedIn();
      // Owner can update their own post.
      // Non-owners can perform updates (like incrementing comments/likes) as long as they don't change the post content.
      allow update: if isSignedIn() && (isOwner(resource.data.authorId) || request.resource.data.content == resource.data.content);
      allow delete: if isSignedIn() && isOwner(resource.data.authorId);

      // Rule for the comments subcollection
      match /comments/{commentId} {
        allow read, list, create: if isSignedIn();
        allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
      }
    }
  }
}
