
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.authorId == request.auth.uid;
      
      // Only the owner can change the content.
      // Anyone authenticated can change other fields (likes, comments, etc).
      // We rely on Firestore transactions in the code to increment values safely.
      allow update: if request.auth != null && (
        (resource.data.authorId == request.auth.uid) ||
        (request.resource.data.content == resource.data.content)
      );

      match /comments/{commentId} {
        allow list, get: if true;
        allow create: if request.auth != null && request.resource.data.authorId == request.auth.uid;
        allow update, delete: if false;
      }
    }
    
    match /topics/{topicId} {
       allow create: if true;
       allow read: if true;
       allow update, delete: if false;
    }

    // Add rules for stories
    match /stories/{storyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if false;
    }
  }
}
