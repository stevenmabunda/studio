rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isAuthor(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function isOwner(resourceId) {
      return isSignedIn() && request.auth.uid == resourceId;
    }

    // This function is the key fix. It ensures that when a non-author updates a post
    // (e.g., for a like or comment count), they are not changing the original content.
    function corePostFieldsUnchanged() {
      return request.resource.data.authorId == resource.data.authorId &&
             request.resource.data.authorName == resource.data.authorName &&
             request.resource.data.authorHandle == resource.data.authorHandle &&
             request.resource.data.authorAvatar == resource.data.authorAvatar &&
             request.resource.data.content == resource.data.content &&
             request.resource.data.createdAt == resource.data.createdAt &&
             request.resource.data.media == resource.data.media;
    }

    // USERS collection: Users can read any profile, but only create/update their own.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Do not allow users to delete their own profiles
    }
    
    // TOPICS collection: Authenticated users can create topics (triggered by posting), but not modify them.
    match /topics/{topicId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if false;
      allow delete: if false;
    }

    // STORIES collection: Users can read stories, create/delete their own, but not update them.
    match /stories/{storyId} {
      allow read: if isSignedIn();
      allow create: if isAuthor(request.resource.data.userId);
      allow update: if false;
      allow delete: if isAuthor(resource.data.userId);
    }
    
    // POSTS collection
    match /posts/{postId} {
      allow read: if isSignedIn();
      allow create: if isAuthor(request.resource.data.authorId);
      
      // UPDATE: Allow if the user is the author OR if it's an interaction update
      // by any other signed-in user where the core post content does not change.
      allow update: if (isAuthor(resource.data.authorId)) || 
                       (isSignedIn() && corePostFieldsUnchanged());

      allow delete: if isAuthor(resource.data.authorId);

      // COMMENTS subcollection
      match /comments/{commentId} {
        allow read: if isSignedIn();
        allow create: if isAuthor(request.resource.data.authorId);
        allow update: if isAuthor(request.resource.data.authorId); // Allow authors to edit their own comments
        allow delete: if isAuthor(resource.data.authorId); // Allow authors to delete their own comments
      }
    }
  }
}
